npx create-react-app client

docker build .

docker run -it stephengrider/posts sh

# Docker General Commands
1- docker build -t moemen/posts .
2- docker run [image id or image tag]
3- docker run -it [image id or image tag][cmd]
4- docker ps
5- docker exec -it [container id][cmd]
6- docker logs [container id]


docker build -t moemen/event-bus .
docker run moemen/event-bus


# show k8s versions
kubectl version

# meaning K8S
kubernetes cluster  => A collections of nodes + a master to manage them

Node    => A virtual machine that will run out containers

Pod     => More or less running container.,
Technically, a pod can run multiple containers (we won't do this)

Deployment  => Monitors a set of pods, make sure they are running and restarts them if they crash

Service => Provides an easy to remember URL to access a running container.

# run k8s file config => create Pods
kubectl apply -f posts.yaml

# list Pods
kubectl get pods

# Delete Pods
kubectl delete pod NamePods

kubectl exec -it [pods_name][cmd]

kubectl logs [pod_name]

kubectl delete pod [pod_name]

kubectl apply -f [config file name]

kubectl describe pod [pod_name]

kubectl get deployments


# Deployment Commands
kubectl get deployments

kubectl describe deployment [depl name]

kubectl apply -f [config file name]

kubectl delete deployment [depl_name]

docker push moemengaballah/posts

kubectl rollout restart deployment [depl_name]


=====================

kubectl apply -f posts-depl.yaml

kubectl get deployments

docker build -t moemengaballah/posts .

docker push moemengaballah/posts

k get deployments

kubectl rollout restart deployment [posts-depl]

kubectl get deployments

kubectl get pods

kubectl logs [pod_name]

kubectl describe service posts-srv

kubectl get services

kubectl rollout restart deployment

# https://kubernetes.github.io/ingress-nginx/deploy/#quick-start
kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.8.0/deploy/static/provider/cloud/deploy.yaml

# solve problem kubectl apply -f ingress-srv.yaml
#Error error: resource mapping not found for name: "ingress-srv" namespace: "" from "ingress-srv.yaml": no matches for kind "Ingress" in version "networking.k8s.io/v1beta1"
       ensure CRDs are installed first

https://stackoverflow.com/questions/72224230/error-resource-mapping-not-found-make-sure-crds-are-installed-first

kubectl rollout restart deployment client-depl

kubectl apply -f ingress-srv.yaml

# skaffold build all images
skaffold dev